services:
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: todo_db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports: ["5432:5432"]
    volumes:
      - postgres_data:/var/lib/postgresql/data

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    environment:
      PORT: 8080
      DATABASE_URL: postgres://user:password@postgres:5432/todo_db?sslmode=disable
      JWT_SECRET: supersecretjwtkey
    volumes:
      - ./backend:/backend
      - go-mod-cache:/go/pkg/mod
      - go-build-cache:/root/.cache/go-build
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:8080/health"]
      interval: 5s
      timeout: 3s
      retries: 30
      start_period: 10s
    depends_on:
      - postgres

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "5173:5173"
    environment:
      VITE_API_BASE_URL: /api/v1
      # VITE_USE_MATRIX_LITE: '1'
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://127.0.0.1:5173', r => process.exit(r.statusCode < 500 ? 0 : 1)).on('error', () => process.exit(1))"]
      interval: 5s
      timeout: 3s
      retries: 50
      start_period: 20s

  nginx:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile.dev
    ports:
      - "8080:80"
    depends_on:
      backend:
        condition: service_healthy
      frontend:
        condition: service_healthy
    restart: unless-stopped

volumes:
  postgres_data:
  go-mod-cache:
  go-build-cache:
