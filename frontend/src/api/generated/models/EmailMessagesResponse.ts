/* tslint:disable */
/* eslint-disable */
/**
 * Todo Microservice API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { EmailMessageHeader } from './EmailMessageHeader';
import {
  EmailMessageHeaderFromJSON,
  EmailMessageHeaderFromJSONTyped,
  EmailMessageHeaderToJSON,
  EmailMessageHeaderToJSONTyped,
} from './EmailMessageHeader';

/**
 *
 * @export
 * @interface EmailMessagesResponse
 */
export interface EmailMessagesResponse {
  /**
   *
   * @type {Array<EmailMessageHeader>}
   * @memberof EmailMessagesResponse
   */
  messages?: Array<EmailMessageHeader>;
}

/**
 * Check if a given object implements the EmailMessagesResponse interface.
 */
export function instanceOfEmailMessagesResponse(value: object): value is EmailMessagesResponse {
  return true;
}

export function EmailMessagesResponseFromJSON(json: any): EmailMessagesResponse {
  return EmailMessagesResponseFromJSONTyped(json, false);
}

export function EmailMessagesResponseFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): EmailMessagesResponse {
  if (json == null) {
    return json;
  }
  return {
    messages:
      json['messages'] == null
        ? undefined
        : (json['messages'] as Array<any>).map(EmailMessageHeaderFromJSON),
  };
}

export function EmailMessagesResponseToJSON(json: any): EmailMessagesResponse {
  return EmailMessagesResponseToJSONTyped(json, false);
}

export function EmailMessagesResponseToJSONTyped(
  value?: EmailMessagesResponse | null,
  ignoreDiscriminator: boolean = false
): any {
  if (value == null) {
    return value;
  }

  return {
    messages:
      value['messages'] == null
        ? undefined
        : (value['messages'] as Array<any>).map(EmailMessageHeaderToJSON),
  };
}
