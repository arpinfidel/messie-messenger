services:
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: todo_db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  backend:
    build: ./backend/backend/
    depends_on:
      - postgres
    environment:
      DATABASE_URL: postgres://user:password@postgres:5432/todo_db?sslmode=disable
      JWT_SECRET: supersecretjwtkey
      PORT: 8080
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:8080/health"]
      interval: 5s
      timeout: 3s
      retries: 20
      start_period: 10s

  frontend:
    image: node:20-alpine
    working_dir: /app
    volumes:
      - ./frontend:/app
    command: sh -c "npm install && npm run dev -- --host 0.0.0.0"
    expose:
      - "5173"
    environment:
      # Use relative path so browser goes through Nginx on :8080
      VITE_API_BASE_URL: /api/v1
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://127.0.0.1:5173', r => process.exit(r.statusCode < 500 ? 0 : 1)).on('error', () => process.exit(1))"]
      # test: ["CMD", "wget", "-qO-", "http://localhost:5173"]
      interval: 5s
      timeout: 3s
      retries: 40
      start_period: 15s

  nginx:
    build: ./backend/api-gateway/
    ports:
      - "8080:80"
    depends_on:
      backend:
        condition: service_healthy
      frontend:
        condition: service_healthy
    restart: unless-stopped

volumes:
  postgres_data:
